-@month_start = (Date.today - 1.month).beginning_of_month
-@month_end = (Date.today - 1.month).end_of_month

%header
  .right
    %h2
      $
      %span= @account.total_revenue_between(@month_start, @month_end)
      in Revenue
    %h3
      %span= @account.number_of_total_contacts_between(@month_start, @month_end)
      Contacts
    %h3
      %span= @account.number_of_total_leads_between(@month_start, @month_end)
      Leads
  %h1= @account.name
  %h2 CityVoice Monthly Report
  %p= @month_start.to_s(:long) + ' to ' + @month_end.to_s(:long)
%article
  -if @account.campaigns.present?
    .span-15
      %h3 Cost Per Lead Summary
      %table#cpl
        %thead
          %th Campaign Name
          %th Calls
          %th Forms
          %th Total Leads
          %th Spend
          %th Cost Per Lead
        %tbody
          -@account.campaigns.each do |campaign|
            %tr
              %td= campaign.name
              %td= campaign.number_of_lead_calls_between(@month_start, @month_end).to_s
              %td= campaign.number_of_lead_submissions_between(@month_start, @month_end).to_s
              %td= campaign.number_of_total_leads_between(@month_start, @month_end).to_s
              %td= ActionController::Base.helpers.number_to_currency(campaign.spend_between(@month_start, @month_end))
              %td= ActionController::Base.helpers.number_to_currency(campaign.cost_per_lead_between(@month_start, @month_end))
        %tfoot
          %th Totals
          %th= @account.number_of_lead_calls_between(@month_start, @month_end)
          %th= @account.number_of_lead_submissions_between(@month_start, @month_end)
          %th= @account.number_of_total_leads_between(@month_start, @month_end)
          %th= ActionController::Base.helpers.number_to_currency(@account.spend_between(@month_start, @month_end))
          %th= ActionController::Base.helpers.number_to_currency(@account.cost_per_lead_between(@month_start, @month_end))
    .span-8.last#cpl_visual
      :javascript
        /**
         * Visualize an HTML table using Highcharts. The top (horizontal) header 
         * is used for series names, and the left (vertical) header is used 
         * for category names. This function is based on jQuery.
         * @param {Object} table The reference to the HTML table to visualize
         * @param {Object} options Highcharts options
         */
        Highcharts.visualize = function(table, options) {
           // the categories
           options.xAxis.categories = [];
           $('thead th', table).each( function(i) {
              options.xAxis.categories.push(this.innerHTML);
           });

           // the data series
           options.series = [];
           $('tr', table).each( function(i) {
              var tr = this;
              $('tbody, td', tr).each( function(j) {
                 if (j > 0) { // skip first column
                    if (i == 0) { // get the name and init the series
                       options.series[j - 1] = { 
                          name: this.innerHTML,
                          data: []
                       };
                    } else { // add values
                       options.series[j - 1].data.push(parseFloat(this.innerHTML));
                    }
                 }
              });
           });

           var chart = new Highcharts.Chart(options);
        }

        // On document ready, call visualize on the datatable.
        $(document).ready(function() {         
           var table = document.getElementById('cpl'),
           options = {
                 chart: {
                    renderTo: 'cpl_visual',
                    defaultSeriesType: 'column'
                 },
                 title: {
                    text: 'Data extracted from a HTML table in the page'
                 },
                 xAxis: {
                 },
                 yAxis: {
                    title: {
                       text: 'Units'
                    }
                 },
                 tooltip: {
                    formatter: function() {
                       return '<b>'+ this.series.name +'</b><br/>'+
                          this.y +' '+ this.x.toLowerCase();
                    }
                 }
              };


           Highcharts.visualize(table, options);
        });
  -if @account.campaigns.sem.present?
    %section#pay_per_click
      %h3 Pay Per Click Summary
      %table
        %thead
          %th Campaign Name
          %th Leads
          %th Clicks
          %th Impressions
          %th CTR
          %th Avg Position
          %th Spend
        %tbody
          -@account.campaigns.sem.each do |campaign|
            %tr
              %td= campaign.name
              %td= campaign.number_of_total_leads_between(@month_start, @month_end).to_s
              %td= campaign.campaign_style.clicks_between(@month_start, @month_end).to_s
              %td= campaign.campaign_style.impressions_between(@month_start, @month_end).to_s
              %td= (sprintf("%.3f", (campaign.campaign_style.click_through_rate_between(@month_start, @month_end) * 100)) + '%')
              %td= '%.2f' % campaign.campaign_style.average_position_between(@month_start, @month_end).to_s
              %td= ActionController::Base.helpers.number_to_currency(campaign.spend_between(@month_start, @month_end))
        %tfoot
          %th Totals
          %th= @account.sem_number_of_total_leads_between(@month_start, @month_end)
          %th= @account.sem_clicks_between(@month_start, @month_end)
          %th= @account.sem_impressions_between(@month_start, @month_end)
          %th= (sprintf("%.3f", (@account.sem_click_through_rate_between(@month_start, @month_end) * 100)) + '%')
          %th= '%.2f' % @account.sem_average_position_between(@month_start, @month_end).to_s
          %th= ActionController::Base.helpers.number_to_currency(@account.sem_spend_between(@month_start, @month_end))

  -if @account.campaigns.seo.present?
    %section#organic_campaigns
      %h3 Organic Campaigns Summary
      %table
        %thead
          %th Campaign Name
          %th Leads
          %th Visits
          %th Actions
          %th Avg Actions/Visit
          %th Total Time Spent
          %th Avg Time Spent
          %th Bounce Rate
          %th Spend
        %tbody
          -@account.campaigns.seo.each do |campaign|
            %tr
              %td= campaign.name
              %td= campaign.number_of_total_leads_between(@month_start, @month_end).to_s
              %td= campaign.number_of_visits_between(@month_start, @month_end).to_s
              %td= campaign.number_of_actions_between(@month_start, @month_end).to_s
              %td= '%.2f' % campaign.number_of_average_actions_between(@month_start, @month_end).to_s
              %td
                - @total_time = campaign.total_time_spent_between(@month_start, @month_end)
                = [(@total_time/3600).to_s + 'h', (@total_time/60 % 60).to_s + 'm', (@total_time % 60).to_s + 's'].map{|t| t.to_s.rjust(2,'0')}.join(':')
              %td
                - @avg_time = campaign.average_total_time_spent_between(@month_start, @month_end).to_i
                = [(@avg_time/3600).to_s + 'h', (@avg_time/60 % 60).to_s + 'm', (@avg_time % 60).to_s + 's'].map{|t| t.to_s.rjust(2,'0')}.join(':')
              %td= (sprintf("%.2f", (campaign.bounce_rate_between(@month_start, @month_end) * 100)) + '%')
              %td= ActionController::Base.helpers.number_to_currency(campaign.spend_between(@month_start, @month_end))
        %tfoot
          %th Totals
          %th= @account.seo_number_of_total_leads_between(@month_start, @month_end)
          %th= @account.seo_number_of_visits_between(@month_start, @month_end)
          %th= @account.seo_number_of_actions_between(@month_start, @month_end)
          %th= '%.2f' % @account.seo_number_of_average_actions_between(@month_start, @month_end)
          %th
            - @total_time = @account.seo_total_time_spent_between(@month_start, @month_end)
            = [(@total_time/3600).to_s + 'h', (@total_time/60 % 60).to_s + 'm', (@total_time % 60).to_s + 's'].map{|t| t.to_s.rjust(2,'0')}.join(':')
          %th
            - @avg_time = @account.seo_average_total_time_spent_between(@month_start, @month_end).to_i
            = [(@avg_time/3600).to_s + 'h', (@avg_time/60 % 60).to_s + 'm', (@avg_time % 60).to_s + 's'].map{|t| t.to_s.rjust(2,'0')}.join(':')
          %th= (sprintf("%.2f", (@account.seo_bounce_rate_between(@month_start, @month_end) * 100)) + '%')
          %th= ActionController::Base.helpers.number_to_currency(@account.seo_spend_between(@month_start, @month_end))

  -if @account.campaigns.maps.present?
    %section#maps_campaigns
      %h3 Maps Campaigns Summary
      %table
        %thead
          %th Campaign Name
          %th Web Visits
        %tbody
          -@account.campaigns.maps.each do |campaign|
            %tr
              %td= campaign.name
              %td= campaign.number_of_map_visits_between(@month_start, @month_end).to_s
        %tfoot
          %th Totals
          %th= @account.maps_number_of_visits_between(@month_start, @month_end)

  -if @account.campaigns.seo.present?
    -@account.campaigns.seo.each_index do |index|
      %table
        %thead
          %th
            = @account.campaigns.seo[index].name + ' Detailed Report'
        %tbody
          %tr
            %td
              /
              /-if @seo_campaign_timelines[index].empty?
              /  No Data
              /-else
              /  = render inline_annotated_timeline(@seo_campaign_timelines[index], 620, 280, 'div_id_to_create', {:zoomEndTime => @seo_campaign_timelines[index].keys.sort[-1], :zoomStartTime  => @seo_campaign_timelines[index].keys.sort[-30] })
              -@sources_link = @account.campaigns.seo[index].campaign_style.website_traffic_sources_graph(@month_start, @month_end)
              -if @sources_link.present?
                %br
                = link_to image_tag(@sources_link, :alt => 'Traffice Sources'), @sources_link
              -@keyword_link = @account.campaigns.seo[index].campaign_style.seo_keyword_rankings_graph(@month_start, @month_end)
              -if @keyword_link.present?
                %br
                = link_to image_tag(@keyword_link, :alt => 'Keyword Rankings By Month'), @keyword_link
                %br
              -@location_link = @account.campaigns.seo[index].websites.first.try(:visitors_by_location_graph, @month_start, @month_end)
              -if @location_link.present?
                %br
                .center
                Visitors by Location
                %br
                = link_to image_tag(@location_link, :alt => 'Visitors By Location'), @location_link
                %br
              -rankings = @account.campaigns.seo[index].campaign_style.seo_keyword_ranking_table(@month_start, @month_end)
              -if rankings.present?
                %table
                  %thead
                    %th Keyword
                    %th Google Rank
                    %th 1 Month Change
                    %th Yahoo Rank
                    %th 1 Month Change
                    %th Bing Rank
                    %th 1 Month Change
                  %tbody
                    -rankings.each do |ranking|
                      %tr
                        %td= ranking[0]
                        %td= ranking[1]
                        %td= ranking[2]
                        %td= ranking[3]
                        %td= ranking[4]
                        %td= ranking[5]
                        %td= ranking[6]

  /Begin of Map Detailed Reports
  -if @account.campaigns.maps.present?
    -@account.campaigns.maps.each do |campaign|
      %table
        %thead
          %th
            = campaign.name + ' Detailed Report'
        %tbody
          %tr
            %td
              -@keyword_link = campaign.campaign_style.google_keyword_rankings_graph(@month_start, @month_end)
              -if @keyword_link.present?
                = link_to image_tag(@keyword_link, :alt => 'Google Map Keyword Rankings'), @keyword_link
                %br
              -@count_link = campaign.campaign_style.google_map_data_counts_graph(@month_start, @month_end)
              -if @count_link.present?
                = link_to image_tag(@count_link, :alt => 'Click to View'), @count_link
                %br
              -@clicks_link = campaign.campaign_style.google_map_website_clicks_graph(@month_start, @month_end)
              -if @clicks_link.present?
                = link_to image_tag(@clicks_link, :alt => 'Click to View'), @clicks_link


  /Begin of Calls Section
  -@account.campaigns.each do |campaign|
    -if campaign.calls.between(@month_start, @month_end).present?
      %h3
        = "Calls for #{campaign.name} (#{@account.time_zone})"
      %article
        %table
          %thead
            %tr
              %th Caller
              %th Caller #
              %th Inbound #
              %th Time of Call
              %th Duration
              %th Result
              %th Disposition
              %th Rating
              %th Revenue
          %tbody
            -campaign.calls.between(@month_start, @month_end).each do |call|
              %tr
                %td= call.caller_name
                %td= call.caller_number
                %td= call.inboundno
                %td= call.call_start.to_s(:short)
                %td= call.duration
                %td= call.call_status
                %td= call.disposition
                %td= call.rating
                %td= call.revenue